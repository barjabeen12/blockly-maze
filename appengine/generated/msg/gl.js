// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "elemento";
BlocklyMsg["UNNAMED_KEY"] = "innominada";
BlocklyMsg["TODAY"] = "Hoxe";
BlocklyMsg["DUPLICATE_BLOCK"] = "Duplicar";
BlocklyMsg["ADD_COMMENT"] = "Engadir un comentario";
BlocklyMsg["REMOVE_COMMENT"] = "Eliminar o comentario";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicar o comentario";
BlocklyMsg["EXTERNAL_INPUTS"] = "Entradas externas";
BlocklyMsg["INLINE_INPUTS"] = "Entradas en liña";
BlocklyMsg["DELETE_BLOCK"] = "Borrar o bloque";
BlocklyMsg["DELETE_X_BLOCKS"] = "Borrar %1 bloques";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Queres eliminar os %1 bloques?";
BlocklyMsg["CLEAN_UP"] = "Limpar os bloques";
BlocklyMsg["COLLAPSE_BLOCK"] = "Contraer o bloque";
BlocklyMsg["COLLAPSE_ALL"] = "Contraer os bloques";
BlocklyMsg["EXPAND_BLOCK"] = "Expandir o bloque";
BlocklyMsg["EXPAND_ALL"] = "Expandir os bloques";
BlocklyMsg["DISABLE_BLOCK"] = "Desactivar o bloque";
BlocklyMsg["ENABLE_BLOCK"] = "Activar o bloque";
BlocklyMsg["HELP"] = "Axuda";
BlocklyMsg["UNDO"] = "Desfacer";
BlocklyMsg["REDO"] = "Refacer";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Cambiar o valor:";
BlocklyMsg["RENAME_VARIABLE"] = "Renomear a variable...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Renomear todas as variables \"%1\" a:";
BlocklyMsg["NEW_VARIABLE"] = "Crear a variable...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Crar unha variábel de cadea...";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Nome da nova variable:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://gl.wikipedia.org/wiki/Cor";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Escolle unha cor da paleta.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "cor ó chou";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Escolle unha cor ao chou.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "colorar con";
BlocklyMsg["COLOUR_RGB_RED"] = "vermello";
BlocklyMsg["COLOUR_RGB_GREEN"] = "verde";
BlocklyMsg["COLOUR_RGB_BLUE"] = "azul";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "mesturar";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "cor 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "cor 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "proporción";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Mestura dúas cores ca proporción indicada (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "repeat %1 times";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Faga algunhas instrucións varias veces.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir mentres";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir ata";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "for each item %1 in list %2";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "break out of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continue with next iteration of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Break out of the containing loop.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "se";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "mais se";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "senón";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_AND"] = "e";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_OR"] = "ou";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "non %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "verdadeiro";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "falso";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Returns either true or false.";  // untranslated
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "nulo";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Retornar nulo.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "proba";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "se verdadeiro";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "se falso";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Un número.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://gl.wikipedia.org/wiki/Aritmética";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Retorna a suma de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Retorna a diferenza de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Retorna o produto de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Retorna o cociente da división de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Retorna o primeiro número elevado á potencia do segundo número.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://gl.wikipedia.org/wiki/Raíz_cadrada";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "raíz cadrada";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Retorna a raíz cadrada dun número.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "absoluto";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Retorna o valor absoluto dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Retorna o oposto dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Retorna o logarítmo natural dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Retorna o logarítmo en base 10 dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Retorna o número e elevado á potencia dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Retorna 10 elevado á potencia dun número.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://gl.m.wikipedia.org/wiki/Función_trigonométrica";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Retorna o seno dun grao (non radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Retorna o coseno dun grao (non radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Retorna a tanxente dun grao (non radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Retorna o arco seno dum número.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Retorna o arco coseno dun número.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Retorna o arco tanxente dun número.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://gl.wikipedia.org/wiki/Constante_matemática";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Retorna unha das constantes comúns: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infinito).";
BlocklyMsg["MATH_IS_EVEN"] = "é par";
BlocklyMsg["MATH_IS_ODD"] = "é impar";
BlocklyMsg["MATH_IS_PRIME"] = "é primo";
BlocklyMsg["MATH_IS_WHOLE"] = "é enteiro";
BlocklyMsg["MATH_IS_POSITIVE"] = "é positivo";
BlocklyMsg["MATH_IS_NEGATIVE"] = "é negativo";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "é divisíbel por";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Verifica se un número é par, impar, primo, enteiro, positivo, negativo, ou se é divisíbel por outro número.  Retorna verdadeiro ou falso.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "mudar %1 por %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Suma un número á variábel '%1'.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://gl.wikipedia.org/wiki/Arredondamento";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Arredonda un número cara enriba ou cara abaixo.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "arredonda";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arredonda cara arriba";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arredonda cara abaixo";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "suma da listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Retorna a suma de tódolos números da listaxe.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "menor dunha listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Retorna o menor número da listaxe.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "maior dunha listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Retorna o maior número da listaxe";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "media dunha listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "unir";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
BlocklyMsg["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "no texto";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "imprime %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "listaxe";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 atópase baleira";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Retona verdadeiro se a listaxe atópase baleira.";
BlocklyMsg["LISTS_INLIST"] = "na listaxe";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "get";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "primeiro";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "derradeiro";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "ó chou";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 é o primeiro elemento.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 é o derradeiro elemento.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "definir";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "inserir en";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "como";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Ordear unha copia dunha listaxe.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascendente";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descendente";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numérica";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alfabética";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabética, iñorar maiúsculas/minúsculas";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "set %1 to %2";  // untranslated
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "cara";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "facer algo";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "con:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "con:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "retornar";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "Aceptar";
BlocklyMsg["DIALOG_CANCEL"] = "Cancelar";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "facer";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "se";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "mais se";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "senón";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "elemento";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "elemento";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "elemento";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "elemento";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "cara";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "facer algo";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Xogos do Blockly";
BlocklyGamesMsg["Games.puzzle"] = "Crebacabezas";
BlocklyGamesMsg["Games.maze"] = "Labirinto";
BlocklyGamesMsg["Games.bird"] = "Paxaro";
BlocklyGamesMsg["Games.turtle"] = "Tartaruga";
BlocklyGamesMsg["Games.movie"] = "Filme";
BlocklyGamesMsg["Games.music"] = "Música";
BlocklyGamesMsg["Games.pondTutor"] = "Pond Tutor";  // untranslated
BlocklyGamesMsg["Games.pond"] = "Lagoa";
BlocklyGamesMsg["Games.linesOfCode1"] = "You solved this level with 1 line of JavaScript:";  // untranslated
BlocklyGamesMsg["Games.linesOfCode2"] = "You solved this level with %1 lines of JavaScript:";  // untranslated
BlocklyGamesMsg["Games.nextLevel"] = "Are you ready for level %1?";  // untranslated
BlocklyGamesMsg["Games.finalLevel"] = "Are you ready for the next challenge?";  // untranslated
BlocklyGamesMsg["Games.submitTitle"] = "Title:";  // untranslated
BlocklyGamesMsg["Games.linkTooltip"] = "Gardar e crear unha ligazón aos bloques.";
BlocklyGamesMsg["Games.runTooltip"] = "Run the program you wrote.";  // untranslated
BlocklyGamesMsg["Games.runProgram"] = "Executar o programa";
BlocklyGamesMsg["Games.resetTooltip"] = "Stop the program and reset the level.";  // untranslated
BlocklyGamesMsg["Games.resetProgram"] = "Restablecer";
BlocklyGamesMsg["Games.help"] = "Axuda";
BlocklyGamesMsg["Games.catLogic"] = "Lóxica";
BlocklyGamesMsg["Games.catLoops"] = "Bucles";
BlocklyGamesMsg["Games.catMath"] = "Matemáticas";
BlocklyGamesMsg["Games.catText"] = "Texto";
BlocklyGamesMsg["Games.catLists"] = "Listas";
BlocklyGamesMsg["Games.catColour"] = "Cor";
BlocklyGamesMsg["Games.catVariables"] = "Variables";
BlocklyGamesMsg["Games.catProcedures"] = "Funcións";
BlocklyGamesMsg["Games.httpRequestError"] = "Houbo un problema coa solicitude.";
BlocklyGamesMsg["Games.linkAlert"] = "Comparte os teus bloques con esta ligazón:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Sentímolo, \"%1\" non se corresponde con ningún programa gardado.";
BlocklyGamesMsg["Games.xmlError"] = "Non se puido cargar o ficheiro gardado. Se cadra, foi creado cunha versión diferente de Blockly.";
BlocklyGamesMsg["Games.submitted"] = "Thank you for this program!  If our staff of trained monkeys like it, they will publish it to the gallery within a couple of days.";  // untranslated
BlocklyGamesMsg["Games.listVariable"] = "lista";
BlocklyGamesMsg["Games.textVariable"] = "texto";
BlocklyGamesMsg["Games.breakLink"] = "Once you start editing JavaScript, you can't go back to editing blocks. Is this OK?";  // untranslated
BlocklyGamesMsg["Games.blocks"] = "Bloques";
BlocklyGamesMsg["Games.congratulations"] = "Parabéns!";
BlocklyGamesMsg["Games.helpAbort"] = "This level is extremely difficult. Would you like to skip it and go onto the next game? You can always come back later.";  // untranslated
BlocklyGamesMsg["Index.clear"] = "Delete all your solutions?";  // untranslated
BlocklyGamesMsg["Index.subTitle"] = "Games for tomorrow's programmers.";  // untranslated
BlocklyGamesMsg["Index.moreInfo"] = "Máis información...";
BlocklyGamesMsg["Index.startOver"] = "Queres comezar de novo?";
BlocklyGamesMsg["Index.clearData"] = "Clear data";  // untranslated
BlocklyGamesMsg["Puzzle.animal1"] = "Duck";  // untranslated
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Feathers";  // untranslated
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Beak";  // untranslated
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://en.wikipedia.org/wiki/Duck";  // untranslated
BlocklyGamesMsg["Puzzle.animal2"] = "Gato";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Bigoteira";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Cabelo";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://gl.wikipedia.org/wiki/Gato";
BlocklyGamesMsg["Puzzle.animal3"] = "Abella";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Mel";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Ferrón/Aguillón";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://gl.wikipedia.org/wiki/Abella";
BlocklyGamesMsg["Puzzle.animal4"] = "Caracol";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Cuncha";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Baba";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://gl.wikipedia.org/wiki/Caracol";
BlocklyGamesMsg["Puzzle.picture"] = "imaxe:";
BlocklyGamesMsg["Puzzle.legs"] = "patas:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "escolle...";
BlocklyGamesMsg["Puzzle.traits"] = "trazos:";
BlocklyGamesMsg["Puzzle.error0"] = "Perfecto!\nOs %1 bloques son correctos.";
BlocklyGamesMsg["Puzzle.error1"] = "Por pouco! Un bloque é incorrecto.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 bloques son incorrectos.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "O bloque destacado non é correcto.\nSigue intentándoo.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Comprobar as respostas";
BlocklyGamesMsg["Puzzle.helpText"] = "A cada animal (en verde), faille corresponder a súa foto, sinala o seu número de patas e apiña os seus trazos.";
BlocklyGamesMsg["Maze.moveForward"] = "avanzar";
BlocklyGamesMsg["Maze.turnLeft"] = "xirar á esquerda";
BlocklyGamesMsg["Maze.turnRight"] = "xirar á dereita";
BlocklyGamesMsg["Maze.doCode"] = "facer";
BlocklyGamesMsg["Maze.elseCode"] = "se non";
BlocklyGamesMsg["Maze.helpIfElse"] = "Os bloques \"se/se non\" fan unha cousa ou a outra.";
BlocklyGamesMsg["Maze.pathAhead"] = "se hai camiño diante";
BlocklyGamesMsg["Maze.pathLeft"] = "se hai camiño á esquerda";
BlocklyGamesMsg["Maze.pathRight"] = "se hai camiño á dereita";
BlocklyGamesMsg["Maze.repeatUntil"] = "repetir ata";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Fai que a figura avance un espazo.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Fai que a figura xire á esquerda ou á dereita 90 graos.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Se hai un camiño na dirección especificada, entón fanse algunhas accións.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Se hai un camiño na dirección especificada, entón faise o primeiro bloque de accións. En caso contrario, faise o segundo bloque de accións.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Repetir as accións do bloque ata chegar á meta.";
BlocklyGamesMsg["Maze.capacity0"] = "Restan %0 bloques.";
BlocklyGamesMsg["Maze.capacity1"] = "Resta %1 bloque.";
BlocklyGamesMsg["Maze.capacity2"] = "Restan %2 bloques.";
BlocklyGamesMsg["Maze.runTooltip"] = "Fai que a figura realice o que din os bloques.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Coloca a figura ao inicio do labirinto.";
BlocklyGamesMsg["Maze.helpStack"] = "Amorea unha parella de bloques \"avanzar\" para axudarme a chegar á meta.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Neste nivel, tes que amorear xuntos tódolos bloques no espazo de traballo.";
BlocklyGamesMsg["Maze.helpRun"] = "Executa o teu programa para comprobar o que acontece.";
BlocklyGamesMsg["Maze.helpReset"] = "O teu programa non resolveu o labirinto. Preme en \"Restablecer\" e inténtao de novo.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Chega ao final deste camiño usando só dous bloques. Utiliza \"repetir\" para executar un bloque máis dunha vez.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Xa usaches todos os bloques dispoñibles para este nivel. Para crear un novo bloque, primeiro debes borrar un dos existentes.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Podes apilar máis dun bloque dentro dos bloques \"repetir\".";
BlocklyGamesMsg["Maze.helpSkins"] = "Escolle o teu xogador favorito neste menú.";
BlocklyGamesMsg["Maze.helpIf"] = "Un bloque \"se\" fará algo unicamente se a condición é certa. Intenta xirar á esquerda se hai camiño á esquerda.";
BlocklyGamesMsg["Maze.helpMenu"] = "Preme en %1 no bloque \"se\" para cambiar a súa condición.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Podes resolver este labirinto máis complicado? Intenta seguir a parede da esquerda. Só para programadores avanzados!";
BlocklyGamesMsg["Bird.noWorm"] = "non ten unha miñoca";
BlocklyGamesMsg["Bird.heading"] = "cabeceira";
BlocklyGamesMsg["Bird.noWormTooltip"] = "The condition when the bird has not gotten the worm.";  // untranslated
BlocklyGamesMsg["Bird.headingTooltip"] = "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.";  // untranslated
BlocklyGamesMsg["Bird.positionTooltip"] = "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.";  // untranslated
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Click the icon to modify the 'if' block.";  // untranslated
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Move a tartaruga adiante ou atrás a cantidade indicada.";
BlocklyGamesMsg["Turtle.moveForward"] = "mover adiante";
BlocklyGamesMsg["Turtle.moveBackward"] = "mover atrás";
BlocklyGamesMsg["Turtle.turnTooltip"] = "Xira a tartaruga á esquerda ou á dereita o número especificado de graos.";
BlocklyGamesMsg["Turtle.turnRight"] = "xirar á dereita";
BlocklyGamesMsg["Turtle.turnLeft"] = "xirar á esquerda";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Cambia o grosor do bolígrafo.";
BlocklyGamesMsg["Turtle.setWidth"] = "establecer o grosor en";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Cambia a cor do bolígrafo.";
BlocklyGamesMsg["Turtle.setColour"] = "establecer a cor en";
BlocklyGamesMsg["Turtle.penTooltip"] = "Eleva ou baixa o bolígrafo, para deixar de debuxar ou empezar a debuxar.";
BlocklyGamesMsg["Turtle.penUp"] = "elevar o bolígrafo";
BlocklyGamesMsg["Turtle.penDown"] = "baixar o bolígrafo";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Fai que a tartaruga (o círculo e a frecha) sexa visible ou invisible.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "agochar a tartaruga";
BlocklyGamesMsg["Turtle.showTurtle"] = "amosar a tartaruga";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://gl.wikipedia.org/wiki/Impresi%C3%B3n";
BlocklyGamesMsg["Turtle.printTooltip"] = "Escribe un texto na dirección da tartaruga e desde a súa posición.";
BlocklyGamesMsg["Turtle.print"] = "escribir";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "Define o tipo de letra empregado polo bloque de escritura.";
BlocklyGamesMsg["Turtle.font"] = "tipo de letra";
BlocklyGamesMsg["Turtle.fontSize"] = "tamaño da letra";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "negra";
BlocklyGamesMsg["Turtle.fontItalic"] = "cursiva";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Open the gallery of drawings.";  // untranslated
BlocklyGamesMsg["Turtle.galleryMsg"] = "Ollar a galería";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Your solution works, but you can do better.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Draw the shape with just three blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Draw the star with just four blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpText1"] = "Create a program that draws a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText2"] = "Change your program to draw a pentagon instead of a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText3a"] = "There's a new block that allows you to change the colour:";  // untranslated
BlocklyGamesMsg["Turtle.helpText3b"] = "Debuxa unha estrela amarela.";
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "comezar x";
BlocklyGamesMsg["Movie.y1"] = "comezar y";
BlocklyGamesMsg["Movie.x2"] = "rematar x";
BlocklyGamesMsg["Movie.y2"] = "rematar y";
BlocklyGamesMsg["Movie.radius"] = "raio";
BlocklyGamesMsg["Movie.width"] = "longura";
BlocklyGamesMsg["Movie.height"] = "altura";
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "círculo";
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "rectángulo";
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "liña";
BlocklyGamesMsg["Movie.timeTooltip"] = "Returns the current time in the animation (0-100).";  // untranslated
BlocklyGamesMsg["Movie.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Movie.setColour"] = "mudar a cor cara";
BlocklyGamesMsg["Movie.submitDisabled"] = "Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.galleryTooltip"] = "Open the gallery of movies.";  // untranslated
BlocklyGamesMsg["Movie.galleryMsg"] = "Ollar a galería";
BlocklyGamesMsg["Movie.submitTooltip"] = "Enviar o seu filme á galería.";
BlocklyGamesMsg["Movie.submitMsg"] = "Enviar á galería";
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "Use simple shapes to draw this person.";  // untranslated
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Give the person a couple of hands.";  // untranslated
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use the 'See Gallery' button to see movies that other people have made. If you make an interesting movie, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Music.playNoteTooltip"] = "Plays one musical note of the specified duration and pitch.";  // untranslated
BlocklyGamesMsg["Music.playNote"] = "play %1 note %2";  // untranslated
BlocklyGamesMsg["Music.restTooltip"] = "Waits for the specified duration.";  // untranslated
BlocklyGamesMsg["Music.restWholeTooltip"] = "Waits for one whole note.";  // untranslated
BlocklyGamesMsg["Music.rest"] = "rest %1";  // untranslated
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Switches to the specified instrument when playing subsequent musical notes.";  // untranslated
BlocklyGamesMsg["Music.setInstrument"] = "set instrument to %1";  // untranslated
BlocklyGamesMsg["Music.startTooltip"] = "Executes the blocks inside when the 'Run Program' button is clicked.";  // untranslated
BlocklyGamesMsg["Music.start"] = "when %1 clicked";  // untranslated
BlocklyGamesMsg["Music.pitchTooltip"] = "One note (C4 is 7).";  // untranslated
BlocklyGamesMsg["Music.firstPart"] = "primeiro anaco";
BlocklyGamesMsg["Music.piano"] = "piano";
BlocklyGamesMsg["Music.trumpet"] = "trompeta";
BlocklyGamesMsg["Music.banjo"] = "banllo";
BlocklyGamesMsg["Music.violin"] = "violín";
BlocklyGamesMsg["Music.guitar"] = "guitarra";
BlocklyGamesMsg["Music.flute"] = "frauta";
BlocklyGamesMsg["Music.drum"] = "tambor";
BlocklyGamesMsg["Music.choir"] = "coro";
BlocklyGamesMsg["Music.submitDisabled"] = "Run your program until it stops. Then you may submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.galleryTooltip"] = "Open the gallery of music.";  // untranslated
BlocklyGamesMsg["Music.galleryMsg"] = "Ollar a galería";
BlocklyGamesMsg["Music.submitTooltip"] = "Enviar a súa música á galería.";
BlocklyGamesMsg["Music.submitMsg"] = "Enviar á galería";
BlocklyGamesMsg["Music.helpUseFunctions"] = "Your solution works, but you can do better.  Use functions to reduce the amount of repeated code.";  // untranslated
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "Compose the first four notes of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Complete the full tune of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText6a"] = "This new block lets you change to another instrument.";  // untranslated
BlocklyGamesMsg["Music.helpText6b"] = "Play your tune with a violin.";  // untranslated
BlocklyGamesMsg["Music.helpText7a"] = "This new block adds a silent delay.";  // untranslated
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Swim forward. Specify a direction (0-360).";  // untranslated
BlocklyGamesMsg["Pond.stopTooltip"] = "Stop swimming. Player will slow to a stop.";  // untranslated
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "Display the language documentation.";  // untranslated
BlocklyGamesMsg["Pond.documentation"] = "Documentación";
BlocklyGamesMsg["Pond.playerName"] = "Xogador";
BlocklyGamesMsg["Pond.targetName"] = "Obxectivo";
BlocklyGamesMsg["Pond.pendulumName"] = "Péndulo";
BlocklyGamesMsg["Pond.scaredName"] = "Agoiado";
BlocklyGamesMsg["Pond.helpUseScan"] = "Your solution works, but you can do better. Use 'scan' to tell the cannon how far to shoot.";  // untranslated
BlocklyGamesMsg["Pond.helpText1"] = "Use the 'cannon' command to hit the target. The first parameter is the angle, the second parameter is the range. Find the right combination.";  // untranslated
BlocklyGamesMsg["Pond.helpText2"] = "This target needs to be hit many times. Use a 'while (true)' loop to do something indefinitely.";  // untranslated
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "This opponent is too far away to use the cannon (which has a limit of 70 meters). Instead, use the 'swim' command to start swimming towards the opponent and crash into it.";  // untranslated
BlocklyGamesMsg["Pond.helpText5"] = "This opponent is also too far away to use the cannon. But you are too weak to survive a collision. Swim towards the opponent while your horizontal location is less than than 50. Then 'stop' and use the cannon.";  // untranslated
BlocklyGamesMsg["Pond.helpText6"] = "This opponent will move away when it is hit. Swim towards it if it is out of range (70 meters).";  // untranslated
BlocklyGamesMsg["Gallery"] = "Gallery";  // untranslated
