// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "item";  // untranslated
BlocklyMsg["UNNAMED_KEY"] = "unnamed";  // untranslated
BlocklyMsg["TODAY"] = "今日";
BlocklyMsg["DUPLICATE_BLOCK"] = "Duplicate";  // untranslated
BlocklyMsg["ADD_COMMENT"] = "Add Comment";  // untranslated
BlocklyMsg["REMOVE_COMMENT"] = "Remove Comment";  // untranslated
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
BlocklyMsg["EXTERNAL_INPUTS"] = "External Inputs";  // untranslated
BlocklyMsg["INLINE_INPUTS"] = "Inline Inputs";  // untranslated
BlocklyMsg["DELETE_BLOCK"] = "Delete Block";  // untranslated
BlocklyMsg["DELETE_X_BLOCKS"] = "Delete %1 Blocks";  // untranslated
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Delete all %1 blocks?";  // untranslated
BlocklyMsg["CLEAN_UP"] = "Clean up Blocks";  // untranslated
BlocklyMsg["COLLAPSE_BLOCK"] = "Collapse Block";  // untranslated
BlocklyMsg["COLLAPSE_ALL"] = "Collapse Blocks";  // untranslated
BlocklyMsg["EXPAND_BLOCK"] = "Expand Block";  // untranslated
BlocklyMsg["EXPAND_ALL"] = "Expand Blocks";  // untranslated
BlocklyMsg["DISABLE_BLOCK"] = "Disable Block";  // untranslated
BlocklyMsg["ENABLE_BLOCK"] = "Enable Block";  // untranslated
BlocklyMsg["HELP"] = "幫手";
BlocklyMsg["UNDO"] = "還原";
BlocklyMsg["REDO"] = "復原";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Change value:";  // untranslated
BlocklyMsg["RENAME_VARIABLE"] = "Rename variable...";  // untranslated
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Rename all '%1' variables to:";  // untranslated
BlocklyMsg["NEW_VARIABLE"] = "Create variable...";  // untranslated
BlocklyMsg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "New variable name:";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://zh-yue.wikipedia.org/wiki/色";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Choose a colour from the palette.";  // untranslated
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "random colour";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Choose a colour at random.";  // untranslated
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "colour with";  // untranslated
BlocklyMsg["COLOUR_RGB_RED"] = "red";  // untranslated
BlocklyMsg["COLOUR_RGB_GREEN"] = "green";  // untranslated
BlocklyMsg["COLOUR_RGB_BLUE"] = "blue";  // untranslated
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "blend";  // untranslated
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "colour 1";  // untranslated
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "colour 2";  // untranslated
BlocklyMsg["COLOUR_BLEND_RATIO"] = "ratio";  // untranslated
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://zh-yue.wikipedia.org/wiki/For_迴圈";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "repeat %1 times";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "do";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Do some statements several times.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repeat while";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repeat until";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "for each item %1 in list %2";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "break out of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continue with next iteration of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Break out of the containing loop.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "if";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "else if";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "else";  // untranslated
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_AND"] = "and";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_OR"] = "or";  // untranslated
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "not %1";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "true";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "false";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Returns either true or false.";  // untranslated
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "null";  // untranslated
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Returns null.";  // untranslated
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "test";  // untranslated
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "if true";  // untranslated
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "if false";  // untranslated
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "A number.";  // untranslated
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Return the sum of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "square root";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "absolute";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Return the absolute value of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Return the negation of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Return the natural logarithm of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Return the base 10 logarithm of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian).";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian).";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian).";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Return the arcsine of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Return the arctangent of a number.";  // untranslated
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
BlocklyMsg["MATH_IS_EVEN"] = "is even";  // untranslated
BlocklyMsg["MATH_IS_ODD"] = "is odd";  // untranslated
BlocklyMsg["MATH_IS_PRIME"] = "is prime";  // untranslated
BlocklyMsg["MATH_IS_WHOLE"] = "is whole";  // untranslated
BlocklyMsg["MATH_IS_POSITIVE"] = "is positive";  // untranslated
BlocklyMsg["MATH_IS_NEGATIVE"] = "is negative";  // untranslated
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "is divisible by";  // untranslated
BlocklyMsg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "change %1 by %2";  // untranslated
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "round";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "round up";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "round down";  // untranslated
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "sum of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "min of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "max of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "average of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
BlocklyMsg["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "print %1";  // untranslated
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated
BlocklyMsg["LISTS_INLIST"] = "in list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "get";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "first";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "last";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "是但";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "insert at";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "as";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "set %1 to %2";  // untranslated
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "return";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "仲可以";
BlocklyMsg["DIALOG_CANCEL"] = "取消";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "do";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "do";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "do";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "do";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "if";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "else if";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "else";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "item";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "item";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "item";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "item";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "in list";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "in list";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "in list";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "in list";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "to";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "do something";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "塊狀遊戲";
BlocklyGamesMsg["Games.puzzle"] = "難題";
BlocklyGamesMsg["Games.maze"] = "迷宫";
BlocklyGamesMsg["Games.bird"] = "鳥";
BlocklyGamesMsg["Games.turtle"] = "海龜";
BlocklyGamesMsg["Games.movie"] = "電影";
BlocklyGamesMsg["Games.music"] = "音樂";
BlocklyGamesMsg["Games.pondTutor"] = "池塘導師";
BlocklyGamesMsg["Games.pond"] = "池塘";
BlocklyGamesMsg["Games.linesOfCode1"] = "您用1行JavaScript解決了此級別：";
BlocklyGamesMsg["Games.linesOfCode2"] = "您用%1行JavaScript解決了此級別：";
BlocklyGamesMsg["Games.nextLevel"] = "你是否準備好參加%1級？";
BlocklyGamesMsg["Games.finalLevel"] = "你準備好迎接下一個挑戰了嗎？";
BlocklyGamesMsg["Games.submitTitle"] = "標題:";
BlocklyGamesMsg["Games.linkTooltip"] = "保存並連結到塊。";
BlocklyGamesMsg["Games.runTooltip"] = "運行你編寫嘅程序。";
BlocklyGamesMsg["Games.runProgram"] = "運行計劃";
BlocklyGamesMsg["Games.resetTooltip"] = "停止程序並重置級別。";
BlocklyGamesMsg["Games.resetProgram"] = "重設";
BlocklyGamesMsg["Games.help"] = "幫手";
BlocklyGamesMsg["Games.catLogic"] = "邏輯";
BlocklyGamesMsg["Games.catLoops"] = "循環";
BlocklyGamesMsg["Games.catMath"] = "數學";
BlocklyGamesMsg["Games.catText"] = "發短信";
BlocklyGamesMsg["Games.catLists"] = "一覽";
BlocklyGamesMsg["Games.catColour"] = "顏色";
BlocklyGamesMsg["Games.catVariables"] = "變數";
BlocklyGamesMsg["Games.catProcedures"] = "功能";
BlocklyGamesMsg["Games.httpRequestError"] = "請求有問題。";
BlocklyGamesMsg["Games.linkAlert"] = "透過此連結共享您的塊：\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "抱歉，\"%1\"與任何保存嘅程序唔對應。";
BlocklyGamesMsg["Games.xmlError"] = "無法加載已保存嘅文件。 或者佢係用不同版本嘅塊狀創建嘅？";
BlocklyGamesMsg["Games.submitted"] = "感謝您為呢個程序！  如果我哋訓練有素的猴子嘅工作人員喜歡它，佢哋將喺幾日內將佢發佈到畫廊。";
BlocklyGamesMsg["Games.listVariable"] = "列表";
BlocklyGamesMsg["Games.textVariable"] = "發短信";
BlocklyGamesMsg["Games.breakLink"] = "一旦開始編輯JavaScript，你就無法返抵編輯塊。 可唔可以?";
BlocklyGamesMsg["Games.blocks"] = "封鎖";
BlocklyGamesMsg["Games.congratulations"] = "祝賀！";
BlocklyGamesMsg["Games.helpAbort"] = "呢個級別係極其困難嘅。 你想飛它，進入下一場比賽嗎？ 你總是可以遲啲返嚟。";
BlocklyGamesMsg["Index.clear"] = "刪除所有解決方案？";
BlocklyGamesMsg["Index.subTitle"] = "聽日程序員嘅遊戲。";
BlocklyGamesMsg["Index.moreInfo"] = "教育工作者嘅信息...";
BlocklyGamesMsg["Index.startOver"] = "想重新開始嗎？";
BlocklyGamesMsg["Index.clearData"] = "清晰數據";
BlocklyGamesMsg["Puzzle.animal1"] = "鴨";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "羽毛";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "喙";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://zh-yue.wikipedia.org/wiki/鴨";
BlocklyGamesMsg["Puzzle.animal2"] = "貓";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "鬍鬚";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "毛皮";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://zh-yue.wikipedia.org/wiki/貓";
BlocklyGamesMsg["Puzzle.animal3"] = "蜜蜂";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "蜂蜜";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "毒刺";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://zh-yue.wikipedia.org/wiki/蜜蜂";
BlocklyGamesMsg["Puzzle.animal4"] = "蝸牛";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "殼";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "泥";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://zh-yue.wikipedia.org/wiki/蝸牛";
BlocklyGamesMsg["Puzzle.picture"] = "圖片:";
BlocklyGamesMsg["Puzzle.legs"] = "腿：";
BlocklyGamesMsg["Puzzle.legsChoose"] = "選擇。。。";
BlocklyGamesMsg["Puzzle.traits"] = "性狀：";
BlocklyGamesMsg["Puzzle.error0"] = "完善！\n所有%1蚊都係正確嘅。";
BlocklyGamesMsg["Puzzle.error1"] = "幾乎！ 一個塊不正確。";
BlocklyGamesMsg["Puzzle.error2"] = "%1 蚊不正確。";
BlocklyGamesMsg["Puzzle.tryAgain"] = "突出顯示嘅嚿唔正確。\n繼續努力";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "檢查答案";
BlocklyGamesMsg["Puzzle.helpText"] = "對於每種動物（綠色），附上它的圖片，選擇牠的腿部數量，並製作一疊牠的特徵。";
BlocklyGamesMsg["Maze.moveForward"] = "向前移動";
BlocklyGamesMsg["Maze.turnLeft"] = "左轉";
BlocklyGamesMsg["Maze.turnRight"] = "向右轉";
BlocklyGamesMsg["Maze.doCode"] = "做";
BlocklyGamesMsg["Maze.elseCode"] = "還";
BlocklyGamesMsg["Maze.helpIfElse"] = "如果-第二塊會做一件事或另一件事。";
BlocklyGamesMsg["Maze.pathAhead"] = "如果路徑領先";
BlocklyGamesMsg["Maze.pathLeft"] = "如果路徑向左";
BlocklyGamesMsg["Maze.pathRight"] = "如果路徑向右";
BlocklyGamesMsg["Maze.repeatUntil"] = "重複，直到";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "把玩家向前移動一個空間。";
BlocklyGamesMsg["Maze.turnTooltip"] = "將播放器向左或向右轉90度。";
BlocklyGamesMsg["Maze.ifTooltip"] = "如果有特定方向嘅路徑，則進行一些操作。";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "如果在指定方向上有一條路徑，則進行第一個操作塊。 否則，做第二個蚊行動。";
BlocklyGamesMsg["Maze.whileTooltip"] = "重複封閉嘅操作，直到到達終點。";
BlocklyGamesMsg["Maze.capacity0"] = "您有%0 塊左。";
BlocklyGamesMsg["Maze.capacity1"] = "你仲剩低%1蚊";
BlocklyGamesMsg["Maze.capacity2"] = "您有%2 塊左。";
BlocklyGamesMsg["Maze.runTooltip"] = "畀玩家做方塊講嘅。";
BlocklyGamesMsg["Maze.resetTooltip"] = "將玩家放回迷宮嘅起點。";
BlocklyGamesMsg["Maze.helpStack"] = "把幾個\"向前移動\"塊堆疊喺埋一齊，以幫助我實現目標。";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "在此級別上，您需要把白色工作區中嘅所有塊堆疊喺埋一齊。";
BlocklyGamesMsg["Maze.helpRun"] = "運行您的程序，睇下會發生乜嘢。";
BlocklyGamesMsg["Maze.helpReset"] = "你嘅程序冇解決迷宮。 按\"重置\"，重試。";
BlocklyGamesMsg["Maze.helpRepeat"] = "只需使用兩個方塊到達此路徑嘅末端。 使用\"重複\"多次運行塊。";
BlocklyGamesMsg["Maze.helpCapacity"] = "你已用完此級別嘅所有塊。 要創建新塊，您首先需要刪除現有塊。";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "你可以在\"重複\"塊內安裝多個方塊。";
BlocklyGamesMsg["Maze.helpSkins"] = "從此餐牌中選擇您最喜愛的播放器。";
BlocklyGamesMsg["Maze.helpIf"] = "只有当條件屬實時，\"如果\"嚿先會做一些事情。 如果有左轉路徑，請嘗試左轉。";
BlocklyGamesMsg["Maze.helpMenu"] = "Click on %1 in the 'if' block to change its condition.";  // untranslated
BlocklyGamesMsg["Maze.helpWallFollow"] = "你可唔可以解決呢個複雜嘅迷宮啊？ 嘗試跟隨左側牆壁。 僅限高級程序員！";
BlocklyGamesMsg["Bird.noWorm"] = "冇蠕蟲";
BlocklyGamesMsg["Bird.heading"] = "標題";
BlocklyGamesMsg["Bird.noWormTooltip"] = "鳥冇得到蠕蟲嘅情況。";
BlocklyGamesMsg["Bird.headingTooltip"] = "向畀定角度嘅方向移動：0嚮右移動，90嚮直向上移動等。";
BlocklyGamesMsg["Bird.positionTooltip"] = "x同y標記鳥嘅位置。 当x = 0鳥靠近左邊緣時，当x = 100它靠近右邊緣時。 當y=0鳥在底部時，當y=100它在頂部時。";
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Click the icon to modify the 'if' block.";  // untranslated
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Moves the turtle forward or backward by the specified amount.";  // untranslated
BlocklyGamesMsg["Turtle.moveForward"] = "前進";
BlocklyGamesMsg["Turtle.moveBackward"] = "向後移動";
BlocklyGamesMsg["Turtle.turnTooltip"] = "Turns the turtle left or right by the specified number of degrees.";  // untranslated
BlocklyGamesMsg["Turtle.turnRight"] = "右轉";
BlocklyGamesMsg["Turtle.turnLeft"] = "左轉";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Changes the width of the pen.";  // untranslated
BlocklyGamesMsg["Turtle.setWidth"] = "設置寬度到";
BlocklyGamesMsg["Turtle.colourTooltip"] = "更改筆嘅色水。";
BlocklyGamesMsg["Turtle.setColour"] = "設置顏色到";
BlocklyGamesMsg["Turtle.penTooltip"] = "Lifts or lowers the pen, to stop or start drawing.";  // untranslated
BlocklyGamesMsg["Turtle.penUp"] = "筆了";
BlocklyGamesMsg["Turtle.penDown"] = "筆下來";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Makes the turtle (circle and arrow) visible or invisible.";  // untranslated
BlocklyGamesMsg["Turtle.hideTurtle"] = "屈海龜";
BlocklyGamesMsg["Turtle.showTurtle"] = "顯示海龜";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://zh-yue.wikipedia.org/wiki/印刷";
BlocklyGamesMsg["Turtle.printTooltip"] = "Draws text in the turtle's direction at its location.";  // untranslated
BlocklyGamesMsg["Turtle.print"] = "打印";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://zh-yue.wikipedia.org/wiki/字體";
BlocklyGamesMsg["Turtle.fontTooltip"] = "Sets the font used by the print block.";  // untranslated
BlocklyGamesMsg["Turtle.font"] = "字體";
BlocklyGamesMsg["Turtle.fontSize"] = "字體大小";
BlocklyGamesMsg["Turtle.fontNormal"] = "正常";
BlocklyGamesMsg["Turtle.fontBold"] = "大膽";
BlocklyGamesMsg["Turtle.fontItalic"] = "斜體嘅";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Open the gallery of drawings.";  // untranslated
BlocklyGamesMsg["Turtle.galleryMsg"] = "請參閱圖庫";
BlocklyGamesMsg["Turtle.submitTooltip"] = "将你嘅繪圖提交到圖庫。";
BlocklyGamesMsg["Turtle.submitMsg"] = "提交畀圖庫";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "您的解決方案有效，但您可以做得更好嘅。";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Draw the shape with just three blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Draw the star with just four blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpText1"] = "創建繪製正方形嘅程序。";
BlocklyGamesMsg["Turtle.helpText2"] = "Change your program to draw a pentagon instead of a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText3a"] = "There's a new block that allows you to change the colour:";  // untranslated
BlocklyGamesMsg["Turtle.helpText3b"] = "畫一粒黃星。";
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "開始x";
BlocklyGamesMsg["Movie.y1"] = "開始y";
BlocklyGamesMsg["Movie.x2"] = "結束x";
BlocklyGamesMsg["Movie.y2"] = "結束y";
BlocklyGamesMsg["Movie.radius"] = "半徑";
BlocklyGamesMsg["Movie.width"] = "寬度";
BlocklyGamesMsg["Movie.height"] = "高度";
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "圈";
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "矩形";
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "線";
BlocklyGamesMsg["Movie.timeTooltip"] = "返回動畫中嘅當前時間（ 0-100 ）。";
BlocklyGamesMsg["Movie.colourTooltip"] = "更改筆嘅色水。";
BlocklyGamesMsg["Movie.setColour"] = "設置顏色到";
BlocklyGamesMsg["Movie.submitDisabled"] = "你嘅電影唔郁咗 使用方塊嚟製作有趣嘅嘢。 然後，您可以把您的電影提交到畫廊。";
BlocklyGamesMsg["Movie.galleryTooltip"] = "打開電影庫。";
BlocklyGamesMsg["Movie.galleryMsg"] = "請參閱圖庫";
BlocklyGamesMsg["Movie.submitTooltip"] = "将你嘅電影提交畀畫廊。";
BlocklyGamesMsg["Movie.submitMsg"] = "提交畀圖庫";
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "使用簡單嘅形狀嚟繪製此人。";
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Give the person a couple of hands.";  // untranslated
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "使用\"查看圖庫\"按鈕查看其他人製作嘅電影。 如果您製作一部有趣嘅電影，請使用\"提交到圖庫\"按鈕嚟發佈它。";
BlocklyGamesMsg["Music.playNoteTooltip"] = "播放指定持續時間和音高的一個音符。";
BlocklyGamesMsg["Music.playNote"] = "播放%1注%2";
BlocklyGamesMsg["Music.restTooltip"] = "等待指定嘅持續時間。";
BlocklyGamesMsg["Music.restWholeTooltip"] = "等待一個完整嘅音符。";
BlocklyGamesMsg["Music.rest"] = "休息%1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "播放後續音符時切換到指定樂器。";
BlocklyGamesMsg["Music.setInstrument"] = "把儀器設置為%1";
BlocklyGamesMsg["Music.startTooltip"] = "單擊\"運行程序\"按鈕時執行內部塊。";
BlocklyGamesMsg["Music.start"] = "當%1單擊時";
BlocklyGamesMsg["Music.pitchTooltip"] = "一個音符（C4係7）。";
BlocklyGamesMsg["Music.firstPart"] = "第一部分";
BlocklyGamesMsg["Music.piano"] = "鋼琴";
BlocklyGamesMsg["Music.trumpet"] = "小號";
BlocklyGamesMsg["Music.banjo"] = "班卓琴";
BlocklyGamesMsg["Music.violin"] = "小提琴";
BlocklyGamesMsg["Music.guitar"] = "結他";
BlocklyGamesMsg["Music.flute"] = "長笛";
BlocklyGamesMsg["Music.drum"] = "鼓";
BlocklyGamesMsg["Music.choir"] = "唱詩班";
BlocklyGamesMsg["Music.submitDisabled"] = "運行您的程序，直到它停止。 然後，您可以把音樂提交到畫廊。";
BlocklyGamesMsg["Music.galleryTooltip"] = "打開音樂畫廊。";
BlocklyGamesMsg["Music.galleryMsg"] = "請參閱圖庫";
BlocklyGamesMsg["Music.submitTooltip"] = "将你嘅音樂提交到圖庫。";
BlocklyGamesMsg["Music.submitMsg"] = "提交畀圖庫";
BlocklyGamesMsg["Music.helpUseFunctions"] = "您的解決方案有效，但您可以做得更好嘅。  使用功能嚟減少重複代碼嘅數量。";
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "撰寫 '雅克兄弟' 嘅前四個音符。";
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Complete the full tune of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText6a"] = "This new block lets you change to another instrument.";  // untranslated
BlocklyGamesMsg["Music.helpText6b"] = "Play your tune with a violin.";  // untranslated
BlocklyGamesMsg["Music.helpText7a"] = "This new block adds a silent delay.";  // untranslated
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Swim forward. Specify a direction (0-360).";  // untranslated
BlocklyGamesMsg["Pond.stopTooltip"] = "Stop swimming. Player will slow to a stop.";  // untranslated
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "顯示語言文檔。";
BlocklyGamesMsg["Pond.documentation"] = "文檔";
BlocklyGamesMsg["Pond.playerName"] = "選手";
BlocklyGamesMsg["Pond.targetName"] = "目標";
BlocklyGamesMsg["Pond.pendulumName"] = "擺";
BlocklyGamesMsg["Pond.scaredName"] = "害怕";
BlocklyGamesMsg["Pond.helpUseScan"] = "您的解決方案有效，但您可以做得更好嘅。 使用\"scan\"話畀大炮射多遠。";
BlocklyGamesMsg["Pond.helpText1"] = "使用\"cannon\"命令擊中目標。 頭炮參數係角度，第二個參數係範圍。 搵到正確嘅組合。";
BlocklyGamesMsg["Pond.helpText2"] = "此目標需要多次命中。 使用\"while (true)\"循環無限期地做某事。";
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "呢個對手太遠了，不能使用大炮（有70米嘅極限）。 相反，使用徜徉\"swim\"桎梏命令開始向對手游去並撞到它。";
BlocklyGamesMsg["Pond.helpText5"] = "呢個對手都太遠了，唔可以用大炮了。 但係你太虛弱了，無法在碰撞中倖存下來。 游水向對手，而你嘅水平位置小於50。 然後徜徉\"stop\"止桎梏並使用大炮。";
BlocklyGamesMsg["Pond.helpText6"] = "呢個對手被擊中後會離開。 游水向它，如果佢係範圍外（70米）。";
BlocklyGamesMsg["Gallery"] = "圖集";
